# 1日目：R入門とデータの読み込み {.unnumbered}

## R入門

RとRstudioのインストール，R言語の基本操作については，インターネットで探しとたくさん資料が見付かります。また関連書籍もたくさん出版されているので，自分で調べてみてください。
とりわけ**浅野・中村著「はじめてのRstudio: エラーメッセージなんかこわくない」オーム社**が最初の1冊としてお勧めです。

[はじめてのRstudio](https://amzn.to/34m52wU) (Amazon.co.jpへのリンク)



ここではまず、<span class="marky">基本関数を用いて，用意されたデータを読み込み，データの特徴を確認する</span>ために**記述統計**(descriptive statistics)を出力する方法を学びます。

## データの読み込み

ここでは、手元にcsvファイルがあることを想定しています。
大学生ならMS Excelの`.xlsx`ファイルがデータが記録されたものとして馴染みがあると思いますが、ここではよりシンプルな構造の`csv`ファイルとして作成されたデータを読み込むことが多いです。


Rには最初からcsvファイルを読み込むための基本関数`read.csv()`があります。

:::{.aside}
実際にcsvファイルを読み出すときは、基本関数`read.csv()`よりも、より高性能な`tidyverse`の`readr`パッケージの`read_csv()`関数を使うことが多いです。
:::

```{r chap1_csv}
df <- read.csv("data/d1_2.csv", header = TRUE)
```

:::{.aside}
基本関数`read.csv()`では、`header = TRUE`というオプションを付けて1行目は変数名であることを明示します。
:::

## 記述統計量

データが読み込めたら、そのデータの特徴を見るために，**記述統計量**(descriptive statistics)を確認します。
ここでは基本関数`summary()`を用いてデータの特徴を確認してみましょう。

:::{.aside}
`summary()`
:::

```{r chap1_summary}
summary(df)
```

各変数の最小値`min`、第1四分位`1st Qu.`、中央値`median`、平均値`mean`、第3四分位`3rd Qu.`、最大値`max`が出力されています。
ここで注意しなければならないのは、数値それ自体に意味がなく、数値にカテゴリーが割り当てられているカテゴリー変数である性別の`sex`や住宅所有状況の`house`の平均を計算しても意味が無いです。

:::{.aside}
男性なら1、女性なら2という数値が割り当てられている変数の平均とは？
:::

そこで、カテゴリー変数を数値型から因子型`factor`に変換します。
ファクター型に変換するには基本関数`as.factor()`を用います。

:::{.aside}
`as.factor()`
:::

```{r}
df$sex <- as.factor(df$sex)
df$house <- as.factor(df$house)
```

再度，記述統計を表示します。

```{r}
summary(df)
```

変数`sex`と`house`はカテゴリーごとの度数が示されるようになり，適切な記述統計量が計算できていることが分かります。



## tidyverseで実行

次に、超便利なパッケージ集である**tidyverse**を使って上記の分析を再度実行してみます。
`tidyverse`は**整然データ**(tidy data)というコンピューターが扱いやすい形式のデータに対して、統一した記述方法で可読性の高いソースコードを書けるように作られた，データ処理、分析、可視化といったデータサイエンスのためのパッケージ集です。

`tidyverse`パッケージと`skimr`パッケージを使い，情報量の多い記述統計量の表を作成します。
まずはパッケージのインストールと読み出しを行います。

```{r}
pacman::p_load(
  tidyverse,
  skimr
)
```

準備ができたのでtidyverseの`readr::read_csv()`を用いてcsvファイルを読み込みます。
`read_csv()`関数はオプションの`col_types`を用いて，変数のタイプを指定できます。
`i`が整数，`f`ファクター型を表します。

```{r}
df <- read_csv("data/d1_2.csv", col_types="iifif")
summary(df)
```

:::{.aside}
`readr`パッケージの`read_csv()`関数は高速かつ柔軟なオプション設定が可能なため、csvファイルを読み込む際には`read.csv()`よりも`read_csv()` を使うことが多いです。
:::

データを読み込めたので、次は`skim`パッケージの関数`skim()`を用いてデータの概要を出力し、データの概要を確認します。

:::{.aside}
`skim()`はキレイな記述統計量の表を作成
:::

```{r} 
df %>% skim()
```
